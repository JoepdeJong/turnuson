{"version":3,"sources":["index.scss","_main.scss","_fonts.scss","_breakpoints.scss","_button.scss","_custom.scss"],"names":[],"mappings":"AAUK,QAQO,kBARP,CAAA,iBAaI,CAAA,eAGF,CAKH,kBAAK,CAAA,uBAdG,YACA,CAQL,6BAMI,CADF,eACE,QAAA,CAAA,qBAAA,CAAA,mBAAwB,QAAA,CAAA,cAAA,CAAA,iCAAA,QAAA,CAAA,yBAAA,GAAA,sBAAA,CAAA,GAAA,uBAAA,CAAA,CAAA,iBAAA,GAAA,sBAAA,CAAA,GAAA,uBAAA,CAAA,CChCnC,KACI,QAAW,CACX,wBAAyB,CACzB,UAAc,CACjB,UAIK,eAAgB,CACjB,QAID,uBAAwB,CACxB,eAAgB,CAChB,WAAY,CACZ,YAAa,CACb,qBAAsB,CACzB,eAGG,iBAAkB,CACrB,WCrBG,uBAAwB,CACxB,eAAgB,CAChB,eAAgB,CAChB,qEAIA,CAAA,WACA,uBACA,CAAA,iBACA,CAAA,eAAA,CAAA,uEAMA,CAAA,WAAA,uBACA,CAAA,eAAA,CAAA,eAGJ,CAAA,wEAII,CAAA,WAAA,wBAGJ,CAAA,eACI,CAAA,eACA,CAAA,sEAEA,CAAA,WAGJ,wBACI,CAAA,iBACA,CAAA,eACA,CAAA,qEAKA,CAAA,WAAyB,wBAEzB,CAAA,eACA,CAAA,eAAA,CAAA,sEAKA,CAAA,WACA,wBACA,CAAA,iBAAA,CAAA,eAKJ,CACI,8EAMA,CAAA,WAAA,wBACA,CAAA,iBACH,CAAA,eAEG,CAAA,wEAIA,CAAA,KAAA,wBAKA,CAAA,cACA,CAAA,iBACH,CAAA,kBAGG,oCAEA,CAAA,eAEI,CAAA,MAAA,eAKJ,CAAA,yBC1DI,CAAA,wBAAA,CAAA,iBD+DA,CAAA,iBAKR,CACI,SAAA,CAAA,EAAA,UEtGA,CAAA,iBACA,CAAA,GAAA,wBACA,CAAA,eAAA,CAAyB,eACzB,CAAkB,KAClB,YACA,CAAA,GAAA,cACA,CAAA,YAAA,CAAkB,mCAGlB,GAAA,cAAA,CAAA,WACA,CAAA,CAAA,GAAA,cACA,CAAA,QACA,aAAA,CAAA,qBACA,CAAA,qBAdJ,CAiBQ,iBACH,CAAA,gBCjBH,CAAA,eACA,CAAA,iBACA,CAAA,oBAEA,CAAA,UAAA,CAAA,wBAAsB,CAAA,eAAA,CAAA,cAAA,CAAA,oCAAA,CAAA,cAAA,CAAA,cAAA,UAAA,CAAA,kBAAA,UAAA,CAAA,iBAAA,CAAA,cAAA,CAAA,YAAA,CAAA,qBAAA","file":"main.cf8209ba.chunk.css","sourcesContent":["@import '../../styling/entry';\n\n.Header {\n    display: flex;\n    flex-direction: row;\n    margin-bottom: 8px;\n    margin-top: 32px;\n    justify-content: space-between;\n    align-items: center;\n\n    &__image {\n        flex: 1;\n        flex-direction: column;\n        display: flex;\n        justify-content: space-between;\n\n        img {\n            flex: 1;\n            max-width: 100%;\n        }\n\n        svg {\n            flex: 1;\n        }\n    }\n    &__text {\n       flex: 1;\n    }\n}\n\n@keyframes swing {\n    0% { transform: rotate(8deg); }\n    100% { transform: rotate(-8deg); }\n}","body {\n    margin: 0px;\n    background-color: #071443;\n    color: #ffffff;\n}\n\n#root {\n    &>div {\n      overflow: hidden;\n    }\n}\n\nsection {\n    width: calc(100% - 6rem);\n    max-width: 600px;\n    margin: auto;\n    display: flex;\n    flex-direction: column;\n}\n\n.MainComponent {\n    position: relative;\n}","@font-face {\n    font-family: 'Open Sans';\n    font-style: thin;\n    font-weight: 200;\n    src: url('../assets/fonts/OpenSans/OpenSans-Light.ttf');\n}\n\n@font-face {\n    font-family: 'Open Sans';\n    font-style: normal;\n    font-weight: 400;\n    src: url('../assets/fonts/OpenSans/OpenSans-Regular.ttf');\n}\n\n@font-face {\n    font-family: 'Open Sans';\n    font-style: bold;\n    font-weight: 700;\n    src: url('../assets/fonts/OpenSans/OpenSans-SemiBold.ttf');\n}\n\n@font-face {\n    font-family: 'Futura Std';\n    font-style: thin;\n    font-weight: 200;\n    src: url('../assets/fonts/FuturaStd/FuturaStd-Light.otf');\n}\n\n@font-face {\n    font-family: 'Futura Std';\n    font-style: normal;\n    font-weight: 400;\n    src: url('../assets/fonts/FuturaStd/FuturaStd-Book.otf');\n}\n\n@font-face {\n    font-family: 'Futura Std';\n    font-style: bold;\n    font-weight: 700;\n    src: url('../assets/fonts/FuturaStd/FuturaStd-Heavy.otf');\n}\n\n@font-face {\n    font-family: 'Futura Std';\n    font-style: italic;\n    font-weight: 500;\n    src: url('../assets/fonts/FuturaStd/FuturaStd-MediumOblique.otf');\n}\n\n@font-face {\n    font-family: 'Myriad Pro';\n    font-style: normal;\n    font-weight: 400;\n    src: url('../assets/fonts/MyriadPro-Regular.otf');\n}\n\n//TODO:futura light\n\nbody {\n    font-family: 'Myriad Pro';\n    font-size: 16px;\n    line-height: 1.6em;\n}\n\nh1, h2, h3, h4, h5, h6 {\n    font-family: 'Futura Std', 'Helvetica';\n    font-weight: 400;\n}\nh2, h3 {\n    font-weight: 400;\n    text-decoration: underline;\n    text-transform: uppercase;\n    text-align: center;\n    margin-bottom: 8px;\n    z-index: 1;\n}\n\np {\n    color: #ffffff;\n    line-height: 1.6em;\n}\n\nh4 {\n    font-family: 'Futura Std';\n    font-weight: 700;\n    margin-bottom: 0px;\n    &+p{\n        margin-top: 0px;\n    }\n}\n\nh2 {\n    font-size: 32px;\n    padding: 16px;\n    // margin-top: 32px;\n\n    @include respond-to-max(md) {\n        font-size: 26px;\n        padding: 8px;\n    }\n}\n\nh3 {\n    font-size: 28px;\n}","$breakpoints-map: (\n    xxxs: 20em,\n    xxs: 30em,\n    xs: 40em,\n    sm: 50em,\n    md: 60em,\n    lg: 70em,\n    xl: 80em,\n    xxl: 90em\n);\n\n/* =============================================================================\n  MIXIN: RESPOND-TO-MIN\n  USEAGE: @include respond-to-min(sm) { ... }\n============================================================================= */\n\n@mixin respond-to-min($breakpoint) {\n    @if map-has-key($breakpoints-map, $breakpoint) {\n        @media screen and (min-width: #{map-get($breakpoints-map, $breakpoint)}) {\n            @content;\n        }\n    } @else {\n        @warn 'Unfortunately, no value could be retrieved from `#{$breakpoint}`. '\n        + 'Please make sure it is defined in `$breakpoints` map.';\n    }\n}\n\n/* =============================================================================\n  MIXIN: RESPOND-TO-MAX\n  USEAGE: @include respond-to-max(small) { ... }\n============================================================================= */\n\n@mixin respond-to-max($breakpoint) {\n    @if map-has-key($breakpoints-map, $breakpoint) {\n        @media screen and (max-width: #{map-get($breakpoints-map, $breakpoint)}) {\n            @content;\n        }\n    } @else {\n        @warn 'Unfortunately, no value could be retrieved from `#{$breakpoint}`. '\n        + 'Please make sure it is defined in `$breakpoints` map.';\n    }\n}\n",".Button {\n    display: block;\n    margin: 16px auto 32px auto;\n    background-color: #ffffff;\n    border-radius: 4px;\n    padding: 8px 20px;\n    min-width: 150px;\n    text-align: center;\n    text-decoration: none;\n    color: #000000;\n    text-transform: uppercase;\n    font-weight: 400;\n    font-size: 18px;\n    font-family: 'Futura Std', 'Helvetica';\n    cursor: pointer;\n  \n    &:hover {\n        opacity: 0.7;\n    }\n}","input[type=email] {\n  width: 100%;\n  padding: 12px 16px;\n  font-size: 16px;\n  margin: 8px 0;\n  box-sizing: border-box;\n}"]}